[tool.poetry]
name = "opennem-backend"
version = "3.13.0-beta.0"
description = "OpenNEM Australian Energy Data Backend"
authors = ["Dylan McConnell <dylan.mcconnell@unimelb.edu.au>", "Nik Cubrilovic <nik@infotorch.org>"]
license = "MIT"
packages = [
    { include = "opennem" }
]

readme = "README.md"

homepage = "https://opennem.org.au"
repository = "https://github.com/opennem/opennem"

keywords = ["opennem", "analysis", "australia", "energy"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering"
]

include = [
  'README.md',
  'opennem/settings/logging.yml'
]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.23.0"
sentry-sdk = "^1.15.0"
pydantic = {extras = ["email"], version = "^1.8.2"}
alembic = "^1.6.2"
click = "^8.0.3"
huey = "^2.2.0"
redis = "^4.3.4"
openpyxl = "^3.0.4"
geojson = "^2.5.0"
fastapi = "^0.93.0"
shapely = "^1.7.0"
Wikidata = "^0.7.0"
wikipedia = "^1.4.0"
python-dotenv = "^1.0.0"
geojson-pydantic = "^0.4.2"
validators = "^0.18.1"
python-magic = "^0.4.18"
cachetools = "^5.0.0"
xlrd = "^2.0.1"
datetime-truncate = "^1.1.1"
datedelta = "^1.3"
pandas = "^1.3.3"
osm2geojson = "^0.2.0"
Mako = "^1.1.4"
SQLAlchemy = "^1.4.15"
requests-cache = "^0.9.1"
gitignore-parser = "^0.0.8"
rich = "^12.2.0"
GeoAlchemy = "^0.7.2"
hypercorn = "^0.14.3"
GeoAlchemy2 = "^0.12.1"
Pillow = "^9.1.1"
boto3 = "^1.23.7"
pyquery = "^1.4.3"
seaborn = "^0.12.0"
fastapi-cache2 = {extras = ["redis"], version = "^0.1.9"}
PyGithub = "^1.57"
httpx = {extras = ["brotli"], version = "^0.23.3"}
psycopg2-binary = "^2.9.5"


[tool.poetry.dev-dependencies]
black = "^23.1.0"
isort = "^5.8.0"
pylint = "^2.8.2"
rope = "^1.0.0"
pylint-sqlalchemy = "^0.2.0"
ipython = "^8.0.1"
pytest = "^7.0.1"
pytest-watch = "^4.2.0"
mypy = "^1.0.0"
mdutils = "^1.2.2"
sqlalchemy-stubs = "^0.4"
pytest-benchmark = "^4.0.0"
GitPython = "^3.1.12"
pdbpp = "^0.10.2"
pytest-sugar = "^0.9.4"
tox = "^4.2.6"
types-requests = "^2.25.2"
betamax = "^0.8.1"
types-python-dateutil = "^2.8.0"
coverage = "^7.1.0"
pytest-cov = "^4.0.0"
types-cachetools = "^5.0.0"
types-PyYAML = "^6.0.4"
uvicorn = "^0.19.0"
pyflakes = "^3.0.1"
mccabe = "^0.7.0"
ruff = "^0.0.215"
pyupgrade = "^3.1.0"
flake8 = "^6.0.0"
pycodestyle = "^2.10.0"
freezegun = "^1.2.2"

[tool.poetry.scripts]
opennem = 'opennem.cli:main'

[tool.poetry.extras]
postgres = ["psycopg2"]

[tool.poetry.group.dev.dependencies]
pyright = "^1.1.295"
bumpver = "^2022.1120"

[tool.ruff]
target-version = "py311"
line-length = 130
exclude = [
  ".git",
  ".venv",
  "var",
  "scripts",
  "opennem/db/migrations",
  "build",
  "notebooks",
  "opennem/stubs",
  ".ipython",
  ".jupyter",
]

[tool.black]
line-length = 130
target_version = ['py311']
include = '\.pyi?$'
exclude = '''
/(\.git/
  |\.eggs
  |__pycache__
  |\.cache
  |\.ipynb_checkpoints
  |\.mypy_cache
  |\.pytest_cache
  |\.tox
  |\.venv
  |node_modules
  |_build
  |buck-out
  |build
  |dist
  |media
  |infrastructure
  |templates
  |locale
)/
'''

[tool.mypy]
python_version = "3.11"
plugins = "sqlmypy,pydantic.mypy"
ignore_missing_imports = true
disallow_untyped_defs = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 130

[tool.pyright]
include = "opennem/**/*.py"
python_version = "3.11"
strict = true
reportMissingImports = "error"
reportMissingTypeStubs = false

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.bumpver]
current_version = "3.13.0-beta.16"
version_pattern = "MAJOR.MINOR.PATCH[-TAG][.INC0]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
tag_name = "v{new_version}"
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"opennem/__init__.py" = [
    '__version__ = "{version}"',
]
"opennem/utils/version.py" = [
    'version = "{version}"',
]
